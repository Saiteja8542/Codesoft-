import java.io.*;
import java.util.*;
import java.util.regex.Pattern;

public class WordCounter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to the Word Counter!");
        System.out.println("Choose an option:");
        System.out.println("1. Enter text");
        System.out.println("2. Provide a file");

        int option = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        String inputText = "";
        if (option == 1) {
            System.out.print("Enter your text: ");
            inputText = scanner.nextLine();
        } else if (option == 2) {
            System.out.print("Enter the file path: ");
            String filePath = scanner.nextLine();
            try {
                inputText = readFile(filePath);
            } catch (IOException e) {
                System.err.println("File not found or could not be read.");
                return;
            }
        } else {
            System.err.println("Invalid option. Please choose 1 or 2.");
            return;
        }

        // Split the input text into words using space or punctuation as delimiters
        String[] words = inputText.split("[\\p{Punct}\\s]+");

        // Initialize a counter variable
        int wordCount = 0;

        // Create a map to store word frequencies
        Map<String, Integer> wordFrequency = new HashMap<>();

        // Add common words to ignore (customize this list as needed)
        Set<String> commonWords = new HashSet<>(Arrays.asList("the", "and", "in", "to", "is", "on"));

        for (String word : words) {
            if (!word.isEmpty()) {
                wordCount++;
                word = word.toLowerCase(); // Convert to lowercase for case-insensitive counting

                if (!commonWords.contains(word)) {
                    wordFrequency.put(word, wordFrequency.getOrDefault(word, 0) + 1);
                }
            }
        }

        System.out.println("Total word count: " + wordCount);

        // Display word frequency statistics
        System.out.println("Word Frequency Statistics:");
        for (Map.Entry<String, Integer> entry : wordFrequency.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }

    // Read text from a file
    private static String readFile(String filePath) throws IOException {
        StringBuilder text = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                text.append(line).append("\n");
            }
        }
        return text.toString();
    }
}
